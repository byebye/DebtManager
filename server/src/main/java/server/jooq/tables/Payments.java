/**
 * This class is generated by jOOQ
 */
package server.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Payments extends org.jooq.impl.TableImpl<server.jooq.tables.records.PaymentsRecord> {

	private static final long serialVersionUID = -2048819821;

	/**
	 * The reference instance of <code>debtmanager.payments</code>
	 */
	public static final server.jooq.tables.Payments PAYMENTS = new server.jooq.tables.Payments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<server.jooq.tables.records.PaymentsRecord> getRecordType() {
		return server.jooq.tables.records.PaymentsRecord.class;
	}

	/**
	 * The column <code>debtmanager.payments.id</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>debtmanager.payments.term</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.sql.Date> TERM = createField("term", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>debtmanager.payments.budget_id</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.Integer> BUDGET_ID = createField("budget_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>debtmanager.payments.user_id</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>debtmanager.payments.description</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>debtmanager.payments.amount</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.math.BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(6, 2).nullable(false), this, "");

	/**
	 * The column <code>debtmanager.payments.settlement_id</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.Integer> SETTLEMENT_ID = createField("settlement_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>debtmanager.payments.accounted</code>.
	 */
	public final org.jooq.TableField<server.jooq.tables.records.PaymentsRecord, java.lang.Boolean> ACCOUNTED = createField("accounted", org.jooq.impl.SQLDataType.BOOLEAN.defaulted(true), this, "");

	/**
	 * Create a <code>debtmanager.payments</code> table reference
	 */
	public Payments() {
		this("payments", null);
	}

	/**
	 * Create an aliased <code>debtmanager.payments</code> table reference
	 */
	public Payments(java.lang.String alias) {
		this(alias, server.jooq.tables.Payments.PAYMENTS);
	}

	private Payments(java.lang.String alias, org.jooq.Table<server.jooq.tables.records.PaymentsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Payments(java.lang.String alias, org.jooq.Table<server.jooq.tables.records.PaymentsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, server.jooq.Debtmanager.DEBTMANAGER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<server.jooq.tables.records.PaymentsRecord, java.lang.Integer> getIdentity() {
		return server.jooq.Keys.IDENTITY_PAYMENTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<server.jooq.tables.records.PaymentsRecord> getPrimaryKey() {
		return server.jooq.Keys.PAYMENTS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<server.jooq.tables.records.PaymentsRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<server.jooq.tables.records.PaymentsRecord>>asList(server.jooq.Keys.PAYMENTS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<server.jooq.tables.records.PaymentsRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<server.jooq.tables.records.PaymentsRecord, ?>>asList(server.jooq.Keys.PAYMENTS__PAYMENTS_BUDGET_ID_FKEY, server.jooq.Keys.PAYMENTS__PAYMENTS_USER_ID_FKEY, server.jooq.Keys.PAYMENTS__PAYMENTS_SETTLEMENT_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public server.jooq.tables.Payments as(java.lang.String alias) {
		return new server.jooq.tables.Payments(alias, this);
	}

	/**
	 * Rename this table
	 */
	public server.jooq.tables.Payments rename(java.lang.String name) {
		return new server.jooq.tables.Payments(name, null);
	}
}
