/**
 * This class is generated by jOOQ
 */
package server.jooq.tables;

import server.jooq.Debtmanager;
import server.jooq.Keys;
import server.jooq.tables.records.UsersRecord;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users extends org.jooq.impl.TableImpl<UsersRecord> {

	private static final long serialVersionUID = -1529072898;

	/**
	 * The reference instance of <code>debtmanager.users</code>
	 */
	public static final Users USERS = new Users();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<UsersRecord> getRecordType() {
		return UsersRecord.class;
	}

	/**
	 * The column <code>debtmanager.users.id</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>debtmanager.users.email</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.lang.String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(120), this, "");

	/**
	 * The column <code>debtmanager.users.name</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "");

	/**
	 * The column <code>debtmanager.users.bank_account</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.math.BigInteger> BANK_ACCOUNT = createField("bank_account", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(22).nullable(false), this, "");

	/**
	 * The column <code>debtmanager.users.password_hash</code>.
	 */
	public final org.jooq.TableField<UsersRecord, java.lang.String> PASSWORD_HASH = createField("password_hash", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false), this, "");

	/**
	 * Create a <code>debtmanager.users</code> table reference
	 */
	public Users() {
		this("users", null);
	}

	/**
	 * Create an aliased <code>debtmanager.users</code> table reference
	 */
	public Users(java.lang.String alias) {
		this(alias, Users.USERS);
	}

	private Users(java.lang.String alias, org.jooq.Table<UsersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Users(java.lang.String alias, org.jooq.Table<UsersRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Debtmanager.DEBTMANAGER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<UsersRecord, java.lang.Integer> getIdentity() {
		return Keys.IDENTITY_USERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<UsersRecord> getPrimaryKey() {
		return Keys.USERS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<UsersRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<UsersRecord>>asList(Keys.USERS_PKEY, Keys.USERS_EMAIL_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Users as(java.lang.String alias) {
		return new Users(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Users rename(java.lang.String name) {
		return new Users(name, null);
	}
}
